# ----------------------------------------------------------------------------
#
#  Welcome to Baml! To use this generated code, please run the following:
#
#  $ pip install baml
#
# ----------------------------------------------------------------------------

# This file was generated by BAML: please do not edit it. Instead, edit the
# BAML files and re-generate this code using: baml-cli generate
# baml-cli is available with the baml package.

_file_map = {

    "main.baml": "generator PythonClient {\n  output_type \"python/pydantic\"\n  output_dir \"../baml_client\"\n  version \"0.202.1\"\n  default_client_mode \"async\"\n}\n\n// Define an entity with 6 fields\nclass UserProfile {\n  // Critical fields needed for next job execution (3 required)\n  // These use @stream.with_state to track progress and completion state\n  name string @stream.with_state @stream.not_null\n  email string @stream.with_state @stream.not_null\n  is_verified bool @stream.with_state @stream.not_null\n  \n  // Optional fields that can stream with state information\n  bio string @stream.with_state\n  age int @stream.with_state\n  is_premium bool @stream.with_state\n}\n\n// Define the client\nclient<llm> GPT4o {\n  provider openai\n  options {\n    model gpt-4o\n    api_key env.OPENAI_API_KEY\n    supports_streaming true\n  }\n}\n\n// Function to extract user profile from text\nfunction ExtractUserProfile(user_text: string) -> UserProfile {\n  client GPT4o\n  prompt #\"\n    You are a professional data extraction expert. Please carefully analyze the following text and extract detailed user profile information. Take your time to provide a comprehensive response with rich details for each field.\n\n    Text to analyze:\n    {{ user_text }}\n    \n    Please extract the following information with detailed explanations:\n    \n    1. name: Extract the person's full name. If middle names or titles are present, include them.\n    \n    2. email: Find and extract their email address. Verify it follows standard email format.\n    \n    3. is_verified: Determine if this person appears to be a verified/legitimate professional based on their credentials, affiliations, and background. Return true if they have clear professional credentials (PhD, university affiliation, published work, etc.), false otherwise.\n    \n    4. bio: Create a comprehensive biographical description. Include their profession, experience, interests, background, skills, and any other relevant personal or professional details mentioned. Make this detailed and informative - aim for at least 2-3 sentences that capture their essence and background.\n    \n    5. age: Extract their age if explicitly mentioned, or make a reasonable inference based on career experience and other contextual clues.\n    \n    6. is_premium: Determine if this person likely qualifies for premium status based on their professional level, experience, and achievements. Return true for senior professionals, executives, PhDs, or those with 10+ years experience, false for junior professionals.\n    \n    Please provide detailed, well-reasoned responses for each field. Think step by step and be thorough in your analysis.\n    \n    {{ ctx.output_format }}\n  \"#\n}\n\n// Function that represents the \"next job\" - only needs name, email, and verification status\nfunction ProcessUser(name: string, email: string, is_verified: bool) -> string {\n  client GPT4o\n  prompt #\"\n    Generate a welcome message for:\n    Name: {{ name }}\n    Email: {{ email }}\n    Verified Status: {{ is_verified }}\n    \n    Create a personalized welcome message that acknowledges their verification status.\n    If verified, mention their professional credentials. If not verified, use a standard welcome.\n  \"#\n}",
}

def get_baml_files():
    return _file_map